{"version":3,"sources":["js/02-timer.js"],"names":["timer","start","startTme","Date","now","setInterval","currentTime","deltaTime","days","hours","minutes","seconds","convertMs","console","log","ms","addLeadingZero","Math","floor","hour","minute","second","value","String","padStart"],"mappings":";AA+CA,MAAMA,EAAQ,CAEZC,QAEQC,MAAAA,EAAWC,KAAKC,MACtBC,YAAY,KAEJC,MACAC,EADcJ,KAAKC,MACOF,GAI1B,KAAEM,EAAF,MAAQC,EAAR,QAAeC,EAAf,QAAwBC,GAAYC,EAAUL,GACpDM,QAAQC,OAAON,KAAQC,KAASC,KAAWC,MAC1C,OAMP,SAASC,EAAUG,GAgBV,MAAA,CAAEP,KARIQ,EAAeC,KAAKC,MAAMH,EAH3BI,QAWGV,MANDO,EAAeC,KAAKC,MAAOH,EAL7BI,MADCC,OAYSV,QAJNM,EAAeC,KAAKC,MAAQH,EAPhCI,MADCC,KADEC,MAagBV,QAFfK,EAAeC,KAAKC,MAASH,EATjCI,MADCC,KADEC,IADA,OAwBjB,SAASL,EAAeM,GACfC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,GA7BnCxB,EAAMC,QAqBNY,QAAQC,IAAIF,EAAU,MACtBC,QAAQC,IAAIF,EAAU,OACtBC,QAAQC,IAAIF,EAAU","file":"02-timer.29147f63.js","sourceRoot":"../src","sourcesContent":["// import flatpickr from 'flatpickr';\n// import 'flatpickr/dist/flatpickr.min.css';\n\n// const refs = {\n//   startBtn: document.querySelector('[data-start]'),\n//   dateTimePicker: document.querySelector('#datetime-picker'),\n// };\n\n// flatpickr(refs.dateTimePicker, options);\n\n// const options = {\n//   enableTime: true,\n//   time_24hr: true,\n//   defaultDate: new Date(),\n//   minuteIncrement: 1,\n//   onClose(selectedDates) {\n//     console.log(selectedDates[0]);\n//   },\n// };\n\n// const date = new Date();\n// console.log(date);\n// console.log(date.getDate());\n// console.log(date.getDay());\n// console.log(date.getMonth());\n// console.log(date.getFullYear());\n// console.log('getUTCDate(): ', date.getUTCDate());\n// console.log('getUTCHours(): ', date.getUTCHours());\n// console.log(date.setFullYear(2040, 4, 8));\n// console.log(new Date('March 16, 2030 14:25:00'));\n// // date.toString();\n// const preciseTeamMeetingDate = new Date('March 16, 2030 14:25:00');\n// console.log(preciseTeamMeetingDate);\n// const date2 = new Date(2220095790833);\n// console.log(date2);\n\n// const DELAY = 3000;\n// const date3 = Date.now();\n// console.log(date3);\n\n// setTimeout(() => {\n//   const date4 = Date.now();\n\n//   console.log(date4);\n//   console.log(date4 - date3);\n// }, DELAY);\n\nconst timer = {\n  // start timer\n  start() {\n    // save start time/ current time at function call\n    const startTme = Date.now();\n    setInterval(() => {\n      // time at function call\n      const currentTime = Date.now();\n      const deltaTime = currentTime - startTme;\n      // const ms = endTime - currentTime;\n      //   const timeConvert = convertMs(deltaTime);\n      //   console.log(timeConvert);\n      const { days, hours, minutes, seconds } = convertMs(deltaTime);\n      console.log(`${days}:${hours}:${minutes}:${seconds}`);\n    }, 1000);\n  },\n};\n// starts counting\ntimer.start();\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = addLeadingZero(Math.floor(ms / day));\n  // Remaining hours\n  const hours = addLeadingZero(Math.floor((ms % day) / hour));\n  // Remaining minutes\n  const minutes = addLeadingZero(Math.floor(((ms % day) % hour) / minute));\n  // Remaining seconds\n  const seconds = addLeadingZero(Math.floor((((ms % day) % hour) % minute) / second));\n\n  return { days, hours, minutes, seconds };\n}\n\nconsole.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\nconsole.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\nconsole.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n\n// Напиши функцию addLeadingZero(value),\n// которая использует метод метод padStart()\n//  и перед отрисовкой интефрейса форматируй значение.\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, 0);\n}\n"]}